package parkingLot.com.parkingLot;

import org.testng.annotations.Test;

import junit.framework.Assert;

public class AppTest {
	ParkingLotUtil putil = new ParkingLotUtil();
	CartoColorDictionary ccd = new CartoColorDictionary();

	/*
	 * testing create_parking_slot for zero , negative inputs and positive
	 * inputs and testing getMinimumSlot function with input arguments calling
	 * getMinimumslot before createParking should return -1 as no slot is
	 * available. Then creating a parkingLot of size 4 and trying to
	 * getMinimumSlot which should return 1
	 
	 */
	@Test
	public void test_create_parking_lot() {
		Assert.assertEquals(false, putil.createParkingLot(0));
		Assert.assertEquals(false, putil.createParkingLot(-1));
		Assert.assertEquals(-1, putil.getMinimumSlot());
		Assert.assertEquals(true, putil.createParkingLot(4));
		Assert.assertEquals(1, putil.getMinimumSlot());
	}
	
	/*
	 * after the creation of parking lot , this function assigns four cars to four slots
	 and then checks it should not allow to assgin more cars as all slots are free
	 */
	@Test
	public void test_allot_car(){
		int slotId= putil.getMinimumSlot();
		Assert.assertEquals(true,putil.Allot("red"," KA-01-HH-1234",slotId));
		Assert.assertEquals(true,putil.Allot("blue"," KA-01-HH-4567",slotId));
		Assert.assertEquals(true,putil.Allot("red"," KA-01-HH-8910",slotId));
		Assert.assertEquals(true,putil.Allot("red"," KA-01-HH-1112",slotId));
		Assert.assertEquals(false,putil.Allot("red"," KA-01-HH-1314",slotId));
		
		
	}

	


}
